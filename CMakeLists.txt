cmake_minimum_required(VERSION 3.6)
project(alg_eng)

message(${CMAKE_CXX_COMPILER_ID})

set(outdir ${CMAKE_CURRENT_SOURCE_DIR}/output)
add_custom_target(build-time-make-dir ALL COMMAND ${CMAKE_COMMAND} -E make_directory ${outdir})

file(GLOB SOURCE_FILES "src/*.cpp" "src/*.hpp")
file(WRITE ${outdir}/dummy.cpp "")
file(GLOB TEST_FILES "test/test.cpp" "test/lib/catch.hpp")

add_library(CORE ${SOURCE_FILES})

add_executable(testing ${TEST_FILES})
set_target_properties(testing PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${outdir})
target_link_libraries(testing CORE)

add_executable(datagen "datagen/datagen.cpp")
set_target_properties(datagen PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${outdir})
target_link_libraries(datagen CORE)

if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    message("Adding -std=c++14, -O3 and PAPI for GNU C++ Compiler.")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -I/usr/local/include -std=c++14 -O2")
    add_library(papi STATIC IMPORTED)
    set_target_properties(papi PROPERTIES IMPORTED_LOCATION /usr/local/lib/libpapi.a)
    add_executable(bmpapi "benchmark/benchmark_papi.cpp")
    set_target_properties(bmpapi PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${outdir})
    target_link_libraries(bmpapi CORE papi)
elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
    message("Adding /D_CRT_SECURE_NO_WARNINGS= /O2 /Ot /Og /Oi /Oy /Ox /Ob2 and PCM for MSVC.")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /D_CRT_SECURE_NO_WARNINGS= /O2 /Ot /Oi /Oy /Ox /Ob2")
    file(GLOB PCM "../pcm/*.obj")
    add_library(pcm ${outdir}/dummy.cpp ${PCM})
    add_executable(bmpcm "benchmark/benchmark_pcm.cpp")
    set_target_properties(bmpcm PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${outdir})
    target_link_libraries(bmpcm CORE pcm)
    add_executable(rspcm "misc/reset_pcm.cpp")
    set_target_properties(rspcm PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${outdir})
    target_link_libraries(rspcm CORE pcm)
else()
    message("Neither GNU nor MSVC: No additional flags added to the compiler.")
endif()
